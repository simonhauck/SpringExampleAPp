plugins {
    id 'org.springframework.boot' version '2.4.3'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'idea'
    // For test reports
    id 'jacoco'
    id "org.sonarqube" version "3.1.1"
}

// TODO Simon.Hauck 2021-03-07 Change group name and rename your packages
group = 'de.simonhauck'
sourceCompatibility = '15'

// Load version from file
def buildProperties = new Properties()
file("version.properties").withInputStream { stream ->
    buildProperties.load(stream)
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.liquibase:liquibase-core'

    // Annotation on classes etc
    compileOnly 'org.projectlombok:lombok'

    runtimeOnly 'com.h2database:h2'

    // Process annotations
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'

    // Tests
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

// Test and integrationTest should print logging events and use JUnit
tasks.withType(Test) {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed", "standardError" //, "standardOut"
    }
    finalizedBy jacocoTestReport // report is always generated after tests run

}

jacocoTestReport {
    reports {
        xml.enabled true
//        csv.enabled false
    }

//    getExecutionData().setFrom(fileTree(buildDir).include("/jacoco/*.exec"))
}

// Define integration test
sourceSets {
    integrationTest {
        compileClasspath += sourceSets.main.output
        runtimeClasspath += sourceSets.main.output
    }
}

configurations {
    integrationTestImplementation.extendsFrom testImplementation
    integrationTestRuntimeOnly.extendsFrom testRuntimeOnly
}

task integrationTest(type: Test) {
    description = 'Runs integration tests.'
    group = 'verification'

    testClassesDirs = sourceSets.integrationTest.output.classesDirs
    classpath = sourceSets.integrationTest.runtimeClasspath
    shouldRunAfter test
}

check.dependsOn integrationTest

// TODO Simon.Hauck 2021-03-07 Add your sonar information here!!!

// Run tests on sonar
sonarqube {
    properties {
        property "sonar.projectKey", "simonhauck_SpringExampleApp"
        property "sonar.organization", "simonhauck"
        property "sonar.host.url", "https://sonarcloud.io"

        // Test jacoco plugin
//        property "sonar.jacoco.itReportPath", "build/jacoco/integrationTest.exec"
    }
}

